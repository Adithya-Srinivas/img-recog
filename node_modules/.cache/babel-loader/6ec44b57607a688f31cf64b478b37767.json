{"ast":null,"code":"var _jsxFileName = \"/home/adithya/Desktop/Web deveploment/img-recog/src/App.js\";\nimport React, { Component } from 'react';\nimport Particles from 'react-particles-js';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport SignUp from './components/SignUp/SignUp';\nimport Register from './components/Register/Register';\nimport Clarifai from 'clarifai';\nimport Rank from './components/Rank/Rank';\nimport Logo from './components/Logo/Logo';\nimport InputImage from './components/InputImage/InputImage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst app = new Clarifai.App({\n  apiKey: 'da7aaec4862d461a9cbeb68de14ed14c'\n});\nconst properties = {\n  \"particles\": {\n    \"number\": {\n      \"value\": 15,\n      \"density\": {\n        \"enable\": true,\n        \"value_area\": 90\n      }\n    }\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n\n    this.currentRoute = route => {\n      this.setState({\n        route: route\n      });\n    };\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          password: data.password,\n          entries: data.rank,\n          joined: data.joined\n        }\n      });\n    };\n\n    this.displayBox = box => {\n      this.setState({\n        box: box\n      });\n    };\n\n    this.onSearchChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onSubmit = () => {\n      this.setState({\n        imgUrl: this.state.input\n      });\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(response => {\n        if (response) {\n          fetch('http://localhost:3000/image', {\n            method: 'put',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          }).then(response => response.json()).then(count => {\n            this.setState(Object.assign(this.state.user, {\n              entries: count\n            }));\n          });\n        }\n\n        this.displayBox(this.calculateFaceLocation(response));\n      }).catch(err => console.log(err));\n    };\n\n    this.state = {\n      input: '',\n      imgUrl: '',\n      box: {},\n      route: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        password: '',\n        entries: 0,\n        joined: ''\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Particles, {\n        className: \"particles\",\n        params: properties\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 5\n      }, this), this.state.route === false ? /*#__PURE__*/_jsxDEV(SignUp, {\n        loadUser: this.loadUser,\n        currentRoute: this.currentRoute\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 7\n      }, this) : this.state.route === 'register' ? /*#__PURE__*/_jsxDEV(Register, {\n        loadUser: this.loadUser,\n        currentRoute: this.currentRoute\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 42\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Navigation, {\n          currentRoute: this.currentRoute\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(Rank, {\n          name: this.state.user.name,\n          entries: this.state.user.entries\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(InputImage, {\n          searchChange: this.onSearchChange,\n          submit: this.onSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n          box: this.state.box,\n          image: this.state.imgUrl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 8\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\n;\nexport default App;","map":{"version":3,"sources":["/home/adithya/Desktop/Web deveploment/img-recog/src/App.js"],"names":["React","Component","Particles","Navigation","FaceRecognition","SignUp","Register","Clarifai","Rank","Logo","InputImage","app","App","apiKey","properties","constructor","calculateFaceLocation","data","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","currentRoute","route","setState","loadUser","user","id","name","email","password","entries","rank","joined","displayBox","box","onSearchChange","event","input","target","value","onSubmit","imgUrl","state","models","predict","FACE_DETECT_MODEL","then","response","fetch","method","headers","body","JSON","stringify","json","count","Object","assign","catch","err","console","log","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Particles from 'react-particles-js';\nimport './App.css'\nimport Navigation from './components/Navigation/Navigation';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport SignUp from './components/SignUp/SignUp';\nimport Register from './components/Register/Register';\nimport Clarifai from 'clarifai';\nimport Rank from './components/Rank/Rank';\nimport Logo from './components/Logo/Logo';\nimport InputImage from './components/InputImage/InputImage';\n\nconst app = new Clarifai.App({\n apiKey: 'da7aaec4862d461a9cbeb68de14ed14c'\n});\n\nconst properties = {\n\t\"particles\": {\n    \"number\": {\n      \"value\": 15,\n      \"density\": {\n        \"enable\": true,\n        \"value_area\": 90\n      }\n    }\n   }  \n};\n\nclass App extends Component {\n  constructor(){\n    super()\n    this.state = {\n      input : '',\n      imgUrl: '',\n      box : {},\n      route : false,\n      user : {\n       id : '',\n       name : '',\n       email : '',\n       password : '',\n       entries : 0,\n       joined : ''\n      }\n    }\n  }\n  \n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width-(clarifaiFace.right_col * width),\n      bottomRow: height-(clarifaiFace.bottom_row * height)  \n    }\n  };\n  \n  currentRoute = (route) => {\n    this.setState({route : route})\n  }\n\n  loadUser = (data) => {\n    this.setState({user : {\n      id : data.id,\n      name : data.name,\n      email : data.email,\n      password : data.password,\n      entries : data.rank,\n      joined : data.joined\n    }})\n  }\n\n\n  displayBox = (box) => {\n    this.setState({box: box});\n  }\n\n  onSearchChange = (event) => {\n     this.setState({input:event.target.value})\n  };\n\n  onSubmit = () => {\n    this.setState({imgUrl: this.state.input})\n    app.models.predict(\n      Clarifai.FACE_DETECT_MODEL,\n      this.state.input)\n      .then(response => {\n        if (response) {\n          fetch('http://localhost:3000/image', {\n            method: 'put',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          })\n          .then(response => response.json())\n          .then(count => {\n              this.setState(Object.assign(this.state.user, {entries: count}))\n          })\n        }\n        this.displayBox(this.calculateFaceLocation(response))\n      })\n      .catch(err => console.log(err));\n  }\n\n  render(){\n    return(\n    <div>\n    <Particles className='particles'\n      params={properties} />\n    { this.state.route === false \n    ? <SignUp loadUser = {this.loadUser} currentRoute = {this.currentRoute}/>\n    : (this.state.route === 'register' ? <Register loadUser = {this.loadUser} currentRoute = {this.currentRoute} />\n      :\n      <div>\n       <Navigation currentRoute={this.currentRoute}/>\n       <Logo />\n       <Rank name={this.state.user.name} entries={this.state.user.entries} />\n       <InputImage searchChange ={this.onSearchChange} submit = {this.onSubmit}/>\n       <FaceRecognition box = {this.state.box} image = {this.state.imgUrl}/>\n      </div>)\n    }\n    </div>\n    );\n  };\n};\n\nexport default App;\n\n\n\n"]},"metadata":{},"sourceType":"module"}