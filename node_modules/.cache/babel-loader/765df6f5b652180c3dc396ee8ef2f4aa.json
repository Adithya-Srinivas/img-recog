{"ast":null,"code":"var _jsxFileName = \"/home/adithya/Desktop/Web deveploment/img-recog/src/App.js\";\nimport React, { Component } from 'react';\nimport Particles from 'react-particles-js';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Clarifai from 'clarifai';\nimport Rank from './components/Rank/Rank';\nimport Logo from './components/Logo/Logo';\nimport InputImage from './components/InputImage/InputImage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst app = new Clarifai.App({\n  apiKey: 'da7aaec4862d461a9cbeb68de14ed14c'\n});\nconst properties = {\n  \"particles\": {\n    \"number\": {\n      \"value\": 20,\n      \"density\": {\n        \"enable\": true,\n        \"value_area\": 90\n      }\n    }\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputImage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n\n    this.displayBox = box => {\n      this.setState({\n        box: box\n      });\n    };\n\n    this.onSearchChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onSubmit = () => {\n      this.setState({\n        imgUrl: this.state.input\n      });\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(response => this.displayBox(this.calculateFaceLocation(response))).catch(err => console.log(err));\n    };\n\n    this.state = {\n      input: '',\n      imgUrl: '',\n      box: {}\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Particles, {\n        className: \"particles\",\n        params: properties\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Rank, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(InputImage, {\n        searchChange: this.onSearchChange,\n        submit: this.onSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n        box: this.state.box,\n        image: this.state.imgUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\n;\nexport default App;","map":{"version":3,"sources":["/home/adithya/Desktop/Web deveploment/img-recog/src/App.js"],"names":["React","Component","Particles","Navigation","FaceRecognition","Clarifai","Rank","Logo","InputImage","app","App","apiKey","properties","constructor","calculateFaceLocation","data","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayBox","box","setState","onSearchChange","event","input","target","value","onSubmit","imgUrl","state","models","predict","FACE_DETECT_MODEL","then","response","catch","err","console","log","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Particles from 'react-particles-js';\nimport './App.css'\nimport Navigation from './components/Navigation/Navigation';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition'\nimport Clarifai from 'clarifai';\nimport Rank from './components/Rank/Rank';\nimport Logo from './components/Logo/Logo';\nimport InputImage from './components/InputImage/InputImage';\n\nconst app = new Clarifai.App({\n apiKey: 'da7aaec4862d461a9cbeb68de14ed14c'\n});\n\nconst properties = {\n\t\"particles\": {\n    \"number\": {\n      \"value\": 20,\n      \"density\": {\n        \"enable\": true,\n        \"value_area\": 90\n      }\n    }\n   }  \n};\n\nclass App extends Component {\n  constructor(){\n    super()\n    this.state = {\n      input : '',\n      imgUrl: '',\n      box : {}\n    }\n  }\n  \n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputImage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width-(clarifaiFace.right_col * width),\n      bottomRow: height-(clarifaiFace.bottom_row * height)  \n    }\n  };\n\n  displayBox = (box) => {\n    this.setState({box: box});\n  }\n\n  onSearchChange = (event) => {\n     this.setState({input:event.target.value})\n  };\n\n  onSubmit = () => {\n    this.setState({imgUrl: this.state.input})\n    app.models.predict(\n      Clarifai.FACE_DETECT_MODEL,\n      this.state.input)\n    .then(response => this.displayBox(this.calculateFaceLocation(response)))\n       .catch(err => console.log(err))\n  };\n\n  render(){\n    return(\n    <div>\n    <Particles className='particles'\n      params={properties} />\n    <Navigation />\n    <Logo />\n    <Rank />\n    <InputImage searchChange ={this.onSearchChange} submit = {this.onSubmit}/>\n    <FaceRecognition box = {this.state.box} image = {this.state.imgUrl}/>\n    </div>\n    );\n  };\n};\n\nexport default App;\n\n\n\n"]},"metadata":{},"sourceType":"module"}