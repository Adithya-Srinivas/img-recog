{"ast":null,"code":"var _jsxFileName = \"/home/adithya/Desktop/Web deveploment/img-recog/src/App.js\";\nimport React, { Component } from 'react';\nimport Particles from 'react-particles-js';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport SignUp from './components/SignUp/SignUp';\nimport Register from './components/Register/Register';\nimport Rank from './components/Rank/Rank';\nimport Logo from './components/Logo/Logo';\nimport InputImage from './components/InputImage/InputImage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst properties = {\n  \"particles\": {\n    \"number\": {\n      \"value\": 10,\n      \"density\": {\n        \"enable\": true,\n        \"value_area\": 150\n      }\n    }\n  }\n};\nconst intialState = {\n  input: '',\n  imgUrl: '',\n  box: {},\n  route: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    password: '',\n    entries: 0,\n    joined: ''\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n\n    this.currentRoute = route => {\n      this.setState({\n        route: route\n      });\n    };\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          password: data.password,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n\n    this.displayBox = box => {\n      this.setState({\n        box: box\n      });\n    };\n\n    this.signOut = route => {\n      this.setState(intialState);\n    };\n\n    this.onSearchChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onSubmit = () => {\n      this.setState({\n        imgUrl: this.state.input\n      });\n      fetch('http://localhost:3000/imageUrl', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          input: this.state.input\n        })\n      }).then(response => response.json()).then(response => {\n        if (response) {\n          fetch('http://localhost:3000/image', {\n            method: 'put',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          }).then(response => response.json()).then(count => {\n            this.setState(Object.assign(this.state.user, {\n              entries: count\n            }));\n          });\n        }\n\n        this.displayBox(this.calculateFaceLocation(response));\n      }).catch(err => console.log(err));\n    };\n\n    this.state = intialState;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Particles, {\n        className: \"particles\",\n        params: properties\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 5\n      }, this), this.state.route === false ? /*#__PURE__*/_jsxDEV(SignUp, {\n        loadUser: this.loadUser,\n        currentRoute: this.currentRoute\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 7\n      }, this) : this.state.route === 'register' ? /*#__PURE__*/_jsxDEV(Register, {\n        loadUser: this.loadUser,\n        currentRoute: this.currentRoute\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 42\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Navigation, {\n          currentRoute: this.currentRoute,\n          signOut: this.signOut\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(Rank, {\n          name: this.state.user.name,\n          entries: this.state.user.entries\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(InputImage, {\n          searchChange: this.onSearchChange,\n          submit: this.onSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n          box: this.state.box,\n          image: this.state.imgUrl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 8\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\n;\nexport default App;","map":{"version":3,"sources":["/home/adithya/Desktop/Web deveploment/img-recog/src/App.js"],"names":["React","Component","Particles","Navigation","FaceRecognition","SignUp","Register","Rank","Logo","InputImage","properties","intialState","input","imgUrl","box","route","user","id","name","email","password","entries","joined","App","constructor","calculateFaceLocation","data","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","currentRoute","setState","loadUser","displayBox","signOut","onSearchChange","event","target","value","onSubmit","state","fetch","method","headers","body","JSON","stringify","then","response","json","count","Object","assign","catch","err","console","log","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Particles from 'react-particles-js';\nimport './App.css'\nimport Navigation from './components/Navigation/Navigation';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport SignUp from './components/SignUp/SignUp';\nimport Register from './components/Register/Register';\nimport Rank from './components/Rank/Rank';\nimport Logo from './components/Logo/Logo';\nimport InputImage from './components/InputImage/InputImage';\n\nconst properties = {\n\t\"particles\": {\n    \"number\": {\n      \"value\": 10,\n      \"density\": {\n        \"enable\": true,\n        \"value_area\": 150\n      }\n    }\n   }  \n};\n\n\nconst intialState = {\n      input : '',\n      imgUrl: '',\n      box : {},\n      route : false,\n      user : {\n       id : '',\n       name : '',\n       email : '',\n       password : '',\n       entries : 0,\n       joined : ''\n      }\n}\n\n\n\nclass App extends Component {\n  constructor(){\n    super()\n    this.state = intialState;\n  }\n  \n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width-(clarifaiFace.right_col * width),\n      bottomRow: height-(clarifaiFace.bottom_row * height)  \n    }\n  };\n  \n  currentRoute = (route) => {\n    this.setState({route : route})\n  }\n\n  loadUser = (data) => {\n    this.setState({user : {\n      id : data.id,\n      name : data.name,\n      email : data.email,\n      password : data.password,\n      entries : data.entries,\n      joined : data.joined\n    }})\n  }\n\n  displayBox = (box) => {\n    this.setState({box: box});\n  }\n  \n  signOut = (route) => {\n    this.setState(intialState)\n  }\n\n  onSearchChange = (event) => {\n     this.setState({input:event.target.value})\n  };\n\n  onSubmit = () => {\n    this.setState({imgUrl: this.state.input});\n      fetch('http://localhost:3000/imageUrl',{\n        method : 'post',\n        headers : {'Content-Type': 'application/json'},\n        body : JSON.stringify({\n          input : this.state.input\n        })\n      })\n      .then(response => response.json())\n      .then(response => {\n        if (response){\n          fetch('http://localhost:3000/image', {\n            method: 'put',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          })\n          .then(response => response.json())\n          .then(count => {\n              this.setState(Object.assign(this.state.user,{entries: count}))\n          })\n        }\n        this.displayBox(this.calculateFaceLocation(response))\n      })\n      .catch(err => console.log(err));\n  }\n\n  render(){\n    return(\n    <div>\n    <Particles className='particles'\n      params={properties} />\n    { this.state.route === false\n    ? <SignUp loadUser = {this.loadUser} currentRoute = {this.currentRoute}/>\n    : (this.state.route === 'register' ? <Register loadUser = {this.loadUser} currentRoute = {this.currentRoute} />\n      :\n      <div>\n       <Navigation currentRoute={this.currentRoute} signOut={this.signOut}/>\n       <Logo />\n       <Rank name={this.state.user.name} entries={this.state.user.entries} />\n       <InputImage searchChange ={this.onSearchChange} submit = {this.onSubmit}/>\n       <FaceRecognition box = {this.state.box} image = {this.state.imgUrl}/>\n      </div>)\n    }\n    </div>\n    );\n  };\n};\n\nexport default App;\n\n\n\n"]},"metadata":{},"sourceType":"module"}